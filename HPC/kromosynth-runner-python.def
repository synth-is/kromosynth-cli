Bootstrap: docker
From: nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04

# Apptainer definition file for building a container to run kromosynth-evaluate commands _through_ (see README.md)
# - the image "nvidia/cuda:11.8.0-cudnn8-runtime-ubuntu22.04" was specifically chosen for essentia-tensorflow: https://essentia.upf.edu/machine_learning.html#inference-with-gpu
# - to control the location of work directories (so you won't get pesky squashfs "No space left on device errors"),
#   a container can be built with a command like:
# APPTAINER_LOCALCACHEDIR=/mnt/evoruns01/apptainer-tmp/localcache APPTAINER_CACHEDIR=/mnt/evoruns01/apptainer-tmp/cache APPTAINER_TMPDIR=/mnt/evoruns01/apptainer-tmp/tmp apptainer build kromosynth-runner.sif kromosynth-runner.def

%files
    asound.conf /etc/asound.conf

%post
    apt-get update && apt-get install -y mesa-common-dev libxi-dev libasound2 curl pkg-config git python3 python3-pip poppler-utils

    # download Python evaluation requirements definition file and install dependencies from it
    curl -fsSL https://raw.githubusercontent.com/synth-is/kromosynth-evaluate/main/evaluation/unsupervised/requirements.txt -o /tmp/requirements.txt &&\
    python3 -m pip install --upgrade pip
    # remove package versions:
    sed -i 's/==.*$//' /tmp/requirements.txt
    # sed -i '/tensorflow==2.16.1/c\tensorflow[and-cuda]' /tmp/requirements.txt
    # sed -i '/essentia-tensorflow==2.1b6.dev1177/c\essentia-tensorflow' /tmp/requirements.txt
    python3 -m pip install -r /tmp/requirements.txt

    # for plotting:
    pip install palettable pdf2image reportlab

    curl -fsSL https://deb.nodesource.com/setup_20.x | bash - &&\
    apt-get install -y nodejs

    npm install pm2 -g
    npm install -g yarn

# %environment
#     # Set environment variables if needed
#     export LD_LIBRARY_PATH=/usr/local/nvidia/lib:/usr/local/nvidia/lib64:$LD_LIBRARY_PATH
